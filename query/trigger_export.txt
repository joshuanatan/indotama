CREATE TRIGGER `trg_after_insert_brg_pengiriman` AFTER INSERT ON `tbl_brg_pengiriman`
 FOR EACH ROW begin
            insert into tbl_brg_pengiriman_log(executed_function,id_pk_brg_pengiriman,brg_pengiriman_qty,brg_pengiriman_note,id_fk_pengiriman,id_fk_brg_penjualan,id_fk_brg_retur_kembali,id_fk_brg_pemenuhan,id_fk_satuan,brg_pengiriman_create_date,brg_pengiriman_last_modified,id_create_data,id_last_modified) values ('after insert',new.id_pk_brg_pengiriman,new.brg_pengiriman_qty,new.brg_pengiriman_note,new.id_fk_pengiriman,new.id_fk_brg_penjualan,new.id_fk_brg_retur_kembali,new.id_fk_brg_pemenuhan,new.id_fk_satuan,new.brg_pengiriman_create_date,new.brg_pengiriman_last_modified,new.id_create_data,new.id_last_modified);

        end

CREATE TRIGGER `trg_after_insert_brg_permintaan` AFTER INSERT ON `tbl_brg_permintaan`
 FOR EACH ROW begin
            insert into tbl_brg_permintaan_log(executed_function,id_pk_brg_permintaan,brg_permintaan_qty,brg_permintaan_notes,brg_permintaan_deadline,brg_permintaan_status,id_fk_brg,id_fk_cabang,brg_permintaan_create_date,brg_permintaan_last_modified,id_create_data,id_last_modified) values ('after insert',new.id_pk_brg_permintaan,new.brg_permintaan_qty,new.brg_permintaan_notes,new.brg_permintaan_deadline,new.brg_permintaan_status,new.id_fk_brg,new.id_fk_cabang,new.brg_permintaan_create_date,new.brg_permintaan_last_modified,new.id_create_data,new.id_last_modified);

            select last_insert_id() into @last_id;
            set @log_msg = concat('Data baru ditambahkan pada tabel tbl_brg_permintaan. Waktu penambahan: ',now());
            set @log_it = concat('Refrensi log table tbl_brg_permintaan_log dengan id_pk_brg_permintaan_log ',@last_id);
            set @log_data = concat('','[id_pk_brg_permintaan: ',new.id_pk_brg_permintaan,']','[brg_permintaan_qty: ',new.brg_permintaan_qty,']','[brg_permintaan_notes: ',new.brg_permintaan_notes,']','[brg_permintaan_deadline: ',new.brg_permintaan_deadline,']','[brg_permintaan_status: ',new.brg_permintaan_status,']','[id_fk_brg: ',new.id_fk_brg,']','[id_fk_cabang: ',new.id_fk_cabang,']','[brg_permintaan_create_date: ',new.brg_permintaan_create_date,']','[brg_permintaan_last_modified: ',new.brg_permintaan_last_modified,']','[id_create_data: ',new.id_create_data,']','[id_last_modified: ',new.id_last_modified,']');
            call insert_log_all(new.id_last_modified,@log_msg,@log_data,@log_it);
        end

CREATE TRIGGER `trg_after_insert_brg_pindah` AFTER INSERT ON `tbl_brg_pindah`
 FOR EACH ROW begin
            insert into tbl_brg_pindah_log(executed_function,id_pk_brg_pindah,brg_pindah_sumber,id_fk_refrensi_sumber,id_brg_awal,id_brg_tujuan,id_fk_cabang,brg_pindah_qty,brg_pindah_status,brg_pindah_create_date,brg_pindah_last_modified,id_create_data,id_last_modified) values ('after insert',new.id_pk_brg_pindah,new.brg_pindah_sumber,new.id_fk_refrensi_sumber,new.id_brg_awal,new.id_brg_tujuan,new.id_fk_cabang,new.brg_pindah_qty,new.brg_pindah_status,new.brg_pindah_create_date,new.brg_pindah_last_modified,new.id_create_data,new.id_last_modified);

            select last_insert_id() into @last_id;
            set @log_msg = concat('Data baru ditambahkan pada tabel tbl_brg_pindah. Waktu penambahan: ',now());
            set @log_it = concat('Refrensi log table tbl_brg_pindah_log dengan id_pk_brg_pindah_log ',@last_id);
            set @log_data = concat('','[id_pk_brg_pindah: ',new.id_pk_brg_pindah,']','[brg_pindah_sumber: ',new.brg_pindah_sumber,']','[id_fk_refrensi_sumber: ',new.id_fk_refrensi_sumber,']','[id_brg_awal: ',new.id_brg_awal,']','[id_brg_tujuan: ',new.id_brg_tujuan,']','[id_fk_cabang: ',new.id_fk_cabang,']','[brg_pindah_qty: ',new.brg_pindah_qty,']','[brg_pindah_status: ',new.brg_pindah_status,']','[brg_pindah_create_date: ',new.brg_pindah_create_date,']','[brg_pindah_last_modified: ',new.brg_pindah_last_modified,']','[id_create_data: ',new.id_create_data,']','[id_last_modified: ',new.id_last_modified,']');
            call insert_log_all(new.id_last_modified,@log_msg,@log_data,@log_it);
        end

CREATE TRIGGER `trg_after_insert_brg_penjualan` AFTER INSERT ON `tbl_brg_penjualan`
 FOR EACH ROW begin
            insert into tbl_brg_penjualan_log(executed_function,id_pk_brg_penjualan,brg_penjualan_qty_real,brg_penjualan_satuan_real,brg_penjualan_qty,brg_penjualan_satuan,brg_penjualan_harga,brg_penjualan_note,brg_penjualan_status,id_fk_penjualan,id_fk_barang,brg_penjualan_create_date,brg_penjualan_last_modified,id_create_data,id_last_modified) values ('after insert',new.id_pk_brg_penjualan,new.brg_penjualan_qty_real,new.brg_penjualan_satuan_real,new.brg_penjualan_qty,new.brg_penjualan_satuan,new.brg_penjualan_harga,new.brg_penjualan_note,new.brg_penjualan_status,new.id_fk_penjualan,new.id_fk_barang,new.brg_penjualan_create_date,new.brg_penjualan_last_modified,new.id_create_data,new.id_last_modified);

        end

CREATE TRIGGER `trg_after_insert_brg_warehouse` AFTER INSERT ON `tbl_brg_warehouse`
 FOR EACH ROW begin
            insert into tbl_brg_warehouse_log(executed_function,id_pk_brg_warehouse,brg_warehouse_qty,brg_warehouse_notes,brg_warehouse_status,id_fk_brg,id_fk_warehouse,brg_warehouse_create_date,brg_warehouse_last_modified,id_create_data,id_last_modified) values ('after insert',new.id_pk_brg_warehouse,new.brg_warehouse_qty,new.brg_warehouse_notes,new.brg_warehouse_status,new.id_fk_brg,new.id_fk_warehouse,new.brg_warehouse_create_date,new.brg_warehouse_last_modified,new.id_create_data,new.id_last_modified);

            select last_insert_id() into @last_id;
            set @log_msg = concat('Data baru ditambahkan pada tabel tbl_brg_warehouse. Waktu penambahan: ',now());
            set @log_it = concat('Refrensi log table tbl_brg_warehouse_log dengan id_pk_brg_warehouse_log ',@last_id);
            set @log_data = concat('','[id_pk_brg_warehouse: ',new.id_pk_brg_warehouse,']','[brg_warehouse_qty: ',new.brg_warehouse_qty,']','[brg_warehouse_notes: ',new.brg_warehouse_notes,']','[brg_warehouse_status: ',new.brg_warehouse_status,']','[id_fk_brg: ',new.id_fk_brg,']','[id_fk_warehouse: ',new.id_fk_warehouse,']','[brg_warehouse_create_date: ',new.brg_warehouse_create_date,']','[brg_warehouse_last_modified: ',new.brg_warehouse_last_modified,']','[id_create_data: ',new.id_create_data,']','[id_last_modified: ',new.id_last_modified,']');
            call insert_log_all(new.id_last_modified,@log_msg,@log_data,@log_it);
        end

CREATE TRIGGER `trg_after_insert_cabang_admin` AFTER INSERT ON `tbl_cabang_admin`
 FOR EACH ROW begin
            insert into tbl_cabang_admin_log(executed_function,id_pk_cabang_admin,id_fk_cabang,id_fk_user,cabang_admin_status,cabang_admin_create_date,cabang_admin_last_modified,id_create_data,id_last_modified) values ('after insert',new.id_pk_cabang_admin,new.id_fk_cabang,new.id_fk_user,new.cabang_admin_status,new.cabang_admin_create_date,new.cabang_admin_last_modified,new.id_create_data,new.id_last_modified);

            select last_insert_id() into @last_id;
            set @log_msg = concat('Data baru ditambahkan pada tabel tbl_cabang_admin. Waktu penambahan: ',now());
            set @log_it = concat('Refrensi log table tbl_cabang_admin_log dengan id_pk_cabang_admin_log ',@last_id);
            set @log_data = concat('','[id_pk_cabang_admin: ',new.id_pk_cabang_admin,']','[id_fk_cabang: ',new.id_fk_cabang,']','[id_fk_user: ',new.id_fk_user,']','[cabang_admin_status: ',new.cabang_admin_status,']','[cabang_admin_create_date: ',new.cabang_admin_create_date,']','[cabang_admin_last_modified: ',new.cabang_admin_last_modified,']','[id_create_data: ',new.id_create_data,']','[id_last_modified: ',new.id_last_modified,']');
            call insert_log_all(new.id_last_modified,@log_msg,@log_data,@log_it);
        end

CREATE TRIGGER `trg_after_insert_hak_akses` AFTER INSERT ON `tbl_hak_akses`
 FOR EACH ROW begin
            insert into tbl_hak_akses_log(executed_function,id_pk_hak_akses,id_fk_jabatan,id_fk_menu,hak_akses_status,hak_akses_create_date,hak_akses_last_modified,id_create_data,id_last_modified) values ('after insert',new.id_pk_hak_akses,new.id_fk_jabatan,new.id_fk_menu,new.hak_akses_status,new.hak_akses_create_date,new.hak_akses_last_modified,new.id_create_data,new.id_last_modified);

        end

CREATE TRIGGER `trg_after_insert_penjualan_online` AFTER INSERT ON `tbl_penjualan_online`
 FOR EACH ROW begin
            insert into tbl_penjualan_online_log(executed_function,id_pk_penjualan_online,penj_on_marketplace,penj_on_no_resi,penj_on_kurir,penj_on_status,id_fk_penjualan,penj_on_create_date,penj_on_last_modified,id_create_data,id_last_modified) values ('after insert',new.id_pk_penjualan_online,new.penj_on_marketplace,new.penj_on_no_resi,new.penj_on_kurir,new.penj_on_status,new.id_fk_penjualan,new.penj_on_create_date,new.penj_on_last_modified,new.id_create_data,new.id_last_modified);

        end

CREATE TRIGGER `trg_after_insert_penjualan_pembayaran` AFTER INSERT ON `tbl_penjualan_pembayaran`
 FOR EACH ROW begin
            insert into tbl_penjualan_pembayaran_log(executed_function,id_pk_penjualan_pembayaran,id_fk_penjualan,penjualan_pmbyrn_nama,penjualan_pmbyrn_persen,penjualan_pmbyrn_nominal,penjualan_pmbyrn_notes,penjualan_pmbyrn_dateline,penjualan_pmbyrn_status,penjualan_pmbyrn_create_date,penjualan_pmbyrn_last_modified,id_create_data,id_last_modified) values ('after insert',new.id_pk_penjualan_pembayaran,new.id_fk_penjualan,new.penjualan_pmbyrn_nama,new.penjualan_pmbyrn_persen,new.penjualan_pmbyrn_nominal,new.penjualan_pmbyrn_notes,new.penjualan_pmbyrn_dateline,new.penjualan_pmbyrn_status,new.penjualan_pmbyrn_create_date,new.penjualan_pmbyrn_last_modified,new.id_create_data,new.id_last_modified);

        end

CREATE TRIGGER `trg_after_insert_retur_brg` AFTER INSERT ON `tbl_retur_brg`
 FOR EACH ROW begin
            insert into tbl_retur_brg_log(executed_function,id_pk_retur_brg,id_fk_retur,id_fk_brg,retur_brg_qty,retur_brg_satuan,retur_brg_notes,retur_brg_status,retur_create_date,retur_last_modified,id_create_data,id_last_modified) values ('after insert',new.id_pk_retur_brg,new.id_fk_retur,new.id_fk_brg,new.retur_brg_qty,new.retur_brg_satuan,new.retur_brg_notes,new.retur_brg_status,new.retur_create_date,new.retur_last_modified,new.id_create_data,new.id_last_modified);

        end

CREATE TRIGGER `trg_after_insert_retur_kembali` AFTER INSERT ON `tbl_retur_kembali`
 FOR EACH ROW begin
            insert into tbl_retur_kembali_log(executed_function,id_pk_retur_kembali,retur_kembali_qty,retur_kembali_satuan,retur_kembali_harga,retur_kembali_note,retur_kembali_status,id_fk_retur,id_fk_brg,retur_kembali_create_date,retur_kembali_last_modified,id_create_data,id_last_modified) values ('after insert',new.id_pk_retur_kembali,new.retur_kembali_qty,new.retur_kembali_satuan,new.retur_kembali_harga,new.retur_kembali_note,new.retur_kembali_status,new.id_fk_retur,new.id_fk_brg,new.retur_kembali_create_date,new.retur_kembali_last_modified,new.id_create_data,new.id_last_modified);

        end

CREATE TRIGGER `trg_after_insert_tambahan_pembelian` AFTER INSERT ON `tbl_tambahan_pembelian`
 FOR EACH ROW begin
            insert into tbl_tambahan_pembelian_log(executed_function,id_pk_tmbhn,tmbhn,tmbhn_jumlah,tmbhn_satuan,tmbhn_harga,tmbhn_notes,tmbhn_status,id_fk_pembelian,tmbhn_create_date,tmbhn_last_modified,id_create_data,id_last_modified) values ('after insert',new.id_pk_tmbhn,new.tmbhn,new.tmbhn_jumlah,new.tmbhn_satuan,new.tmbhn_harga,new.tmbhn_notes,new.tmbhn_status,new.id_fk_pembelian,new.tmbhn_create_date,new.tmbhn_last_modified,new.id_create_data,new.id_last_modified);

        end

CREATE TRIGGER `trg_after_insert_tambahan_penjualan` AFTER INSERT ON `tbl_tambahan_penjualan`
 FOR EACH ROW begin
            insert into tbl_tambahan_penjualan_log(executed_function,id_pk_tmbhn,tmbhn,tmbhn_jumlah,tmbhn_satuan,tmbhn_harga,tmbhn_notes,tmbhn_status,id_fk_penjualan,tmbhn_create_date,tmbhn_last_modified,id_create_data,id_last_modified) values ('after insert',new.id_pk_tmbhn,new.tmbhn,new.tmbhn_jumlah,new.tmbhn_satuan,new.tmbhn_harga,new.tmbhn_notes,new.tmbhn_status,new.id_fk_penjualan,new.tmbhn_create_date,new.tmbhn_last_modified,new.id_create_data,new.id_last_modified);

        end

CREATE TRIGGER `trg_after_insert_toko_admin` AFTER INSERT ON `tbl_toko_admin`
 FOR EACH ROW begin
            insert into tbl_toko_admin_log(executed_function,id_pk_toko_admin,id_fk_toko,id_fk_user,toko_admin_status,toko_admin_create_date,toko_admin_last_modified,id_create_data,id_last_modified) values ('after insert',new.id_pk_toko_admin,new.id_fk_toko,new.id_fk_user,new.toko_admin_status,new.toko_admin_create_date,new.toko_admin_last_modified,new.id_create_data,new.id_last_modified);

            select last_insert_id() into @last_id;
            set @log_msg = concat('Data baru ditambahkan pada tabel tbl_toko_admin. Waktu penambahan: ',now());
            set @log_it = concat('Refrensi log table tbl_toko_admin_log dengan id_pk_toko_admin_log ',@last_id);
            set @log_data = concat('','[id_pk_toko_admin: ',new.id_pk_toko_admin,']','[id_fk_toko: ',new.id_fk_toko,']','[id_fk_user: ',new.id_fk_user,']','[toko_admin_status: ',new.toko_admin_status,']','[toko_admin_create_date: ',new.toko_admin_create_date,']','[toko_admin_last_modified: ',new.toko_admin_last_modified,']','[id_create_data: ',new.id_create_data,']','[id_last_modified: ',new.id_last_modified,']');
            call insert_log_all(new.id_last_modified,@log_msg,@log_data,@log_it);
        end

CREATE TRIGGER `trg_after_insert_warehouse_admin` AFTER INSERT ON `tbl_warehouse_admin`
 FOR EACH ROW begin
            insert into tbl_warehouse_admin_log(executed_function,id_pk_warehouse_admin,id_fk_warehouse,id_fk_user,warehouse_admin_status,warehouse_admin_create_date,warehouse_admin_last_modified,id_create_data,id_last_modified) values ('after insert',new.id_pk_warehouse_admin,new.id_fk_warehouse,new.id_fk_user,new.warehouse_admin_status,new.warehouse_admin_create_date,new.warehouse_admin_last_modified,new.id_create_data,new.id_last_modified);

            select last_insert_id() into @last_id;
            set @log_msg = concat('Data baru ditambahkan pada tabel tbl_warehouse_admin. Waktu penambahan: ',now());
            set @log_it = concat('Refrensi log table tbl_warehouse_admin_log dengan id_pk_warehouse_admin_log ',@last_id);
            set @log_data = concat('','[id_pk_warehouse_admin: ',new.id_pk_warehouse_admin,']','[id_fk_warehouse: ',new.id_fk_warehouse,']','[id_fk_user: ',new.id_fk_user,']','[warehouse_admin_status: ',new.warehouse_admin_status,']','[warehouse_admin_create_date: ',new.warehouse_admin_create_date,']','[warehouse_admin_last_modified: ',new.warehouse_admin_last_modified,']','[id_create_data: ',new.id_create_data,']','[id_last_modified: ',new.id_last_modified,']');
            call insert_log_all(new.id_last_modified,@log_msg,@log_data,@log_it);
        end

CREATE TRIGGER `trg_after_update_brg_penerimaan` AFTER UPDATE ON `tbl_brg_penerimaan`
 FOR EACH ROW begin
            insert into tbl_brg_penerimaan_log(executed_function,id_pk_brg_penerimaan,brg_penerimaan_qty,brg_penerimaan_note,id_fk_penerimaan,id_fk_brg_pembelian,id_fk_brg_retur,id_fk_brg_pengiriman,id_fk_satuan,brg_penerimaan_create_date,brg_penerimaan_last_modified,id_create_data,id_last_modified) values ('after update',new.id_pk_brg_penerimaan,new.brg_penerimaan_qty,new.brg_penerimaan_note,new.id_fk_penerimaan,new.id_fk_brg_pembelian,new.id_fk_brg_retur,new.id_fk_brg_pengiriman,new.id_fk_satuan,new.brg_penerimaan_create_date,new.brg_penerimaan_last_modified,new.id_create_data,new.id_last_modified);

        end

CREATE TRIGGER `trg_after_update_brg_pengiriman` AFTER UPDATE ON `tbl_brg_pengiriman`
 FOR EACH ROW begin
            insert into tbl_brg_pengiriman_log(executed_function,id_pk_brg_pengiriman,brg_pengiriman_qty,brg_pengiriman_note,id_fk_pengiriman,id_fk_brg_penjualan,id_fk_brg_retur_kembali,id_fk_brg_pemenuhan,id_fk_satuan,brg_pengiriman_create_date,brg_pengiriman_last_modified,id_create_data,id_last_modified) values ('after update',new.id_pk_brg_pengiriman,new.brg_pengiriman_qty,new.brg_pengiriman_note,new.id_fk_pengiriman,new.id_fk_brg_penjualan,new.id_fk_brg_retur_kembali,new.id_fk_brg_pemenuhan,new.id_fk_satuan,new.brg_pengiriman_create_date,new.brg_pengiriman_last_modified,new.id_create_data,new.id_last_modified);

        end

CREATE TRIGGER `trg_after_update_brg_penjualan` AFTER UPDATE ON `tbl_brg_penjualan`
 FOR EACH ROW begin
            insert into tbl_brg_penjualan_log(executed_function,id_pk_brg_penjualan,brg_penjualan_qty_real,brg_penjualan_satuan_real,brg_penjualan_qty,brg_penjualan_satuan,brg_penjualan_harga,brg_penjualan_note,brg_penjualan_status,id_fk_penjualan,id_fk_barang,brg_penjualan_create_date,brg_penjualan_last_modified,id_create_data,id_last_modified) values ('after update',new.id_pk_brg_penjualan,new.brg_penjualan_qty_real,new.brg_penjualan_satuan_real,new.brg_penjualan_qty,new.brg_penjualan_satuan,new.brg_penjualan_harga,new.brg_penjualan_note,new.brg_penjualan_status,new.id_fk_penjualan,new.id_fk_barang,new.brg_penjualan_create_date,new.brg_penjualan_last_modified,new.id_create_data,new.id_last_modified);

        end

CREATE TRIGGER `trg_after_update_brg_permintaan` AFTER UPDATE ON `tbl_brg_permintaan`
 FOR EACH ROW begin
            insert into tbl_brg_permintaan_log(executed_function,id_pk_brg_permintaan,brg_permintaan_qty,brg_permintaan_notes,brg_permintaan_deadline,brg_permintaan_status,id_fk_brg,id_fk_cabang,brg_permintaan_create_date,brg_permintaan_last_modified,id_create_data,id_last_modified) values ('after update',new.id_pk_brg_permintaan,new.brg_permintaan_qty,new.brg_permintaan_notes,new.brg_permintaan_deadline,new.brg_permintaan_status,new.id_fk_brg,new.id_fk_cabang,new.brg_permintaan_create_date,new.brg_permintaan_last_modified,new.id_create_data,new.id_last_modified);

            select last_insert_id() into @last_id;
            set @log_msg = concat('Data diubah pada tabel tbl_brg_permintaan. Waktu perubahan: ',now());
            set @log_it = concat('Refrensi log table tbl_brg_permintaan_log dengan id_pk_brg_permintaan_log ',@last_id);
            set @log_data = concat('','[id_pk_brg_permintaan: ',old.id_pk_brg_permintaan,' => ',new.id_pk_brg_permintaan,']','[brg_permintaan_qty: ',old.brg_permintaan_qty,' => ',new.brg_permintaan_qty,']','[brg_permintaan_notes: ',old.brg_permintaan_notes,' => ',new.brg_permintaan_notes,']','[brg_permintaan_deadline: ',old.brg_permintaan_deadline,' => ',new.brg_permintaan_deadline,']','[brg_permintaan_status: ',old.brg_permintaan_status,' => ',new.brg_permintaan_status,']','[id_fk_brg: ',old.id_fk_brg,' => ',new.id_fk_brg,']','[id_fk_cabang: ',old.id_fk_cabang,' => ',new.id_fk_cabang,']','[brg_permintaan_create_date: ',old.brg_permintaan_create_date,' => ',new.brg_permintaan_create_date,']','[brg_permintaan_last_modified: ',old.brg_permintaan_last_modified,' => ',new.brg_permintaan_last_modified,']','[id_create_data: ',old.id_create_data,' => ',new.id_create_data,']','[id_last_modified: ',old.id_last_modified,' => ',new.id_last_modified,']');
            call insert_log_all(new.id_last_modified,@log_msg,@log_data,@log_it);
        end

CREATE TRIGGER `trg_after_update_brg_pindah` AFTER UPDATE ON `tbl_brg_pindah`
 FOR EACH ROW begin
            insert into tbl_brg_pindah_log(executed_function,id_pk_brg_pindah,brg_pindah_sumber,id_fk_refrensi_sumber,id_brg_awal,id_brg_tujuan,id_fk_cabang,brg_pindah_qty,brg_pindah_status,brg_pindah_create_date,brg_pindah_last_modified,id_create_data,id_last_modified) values ('after update',new.id_pk_brg_pindah,new.brg_pindah_sumber,new.id_fk_refrensi_sumber,new.id_brg_awal,new.id_brg_tujuan,new.id_fk_cabang,new.brg_pindah_qty,new.brg_pindah_status,new.brg_pindah_create_date,new.brg_pindah_last_modified,new.id_create_data,new.id_last_modified);

            select last_insert_id() into @last_id;
            set @log_msg = concat('Data diubah pada tabel tbl_brg_pindah. Waktu perubahan: ',now());
            set @log_it = concat('Refrensi log table tbl_brg_pindah_log dengan id_pk_brg_pindah_log ',@last_id);
            set @log_data = concat('','[id_pk_brg_pindah: ',old.id_pk_brg_pindah,' => ',new.id_pk_brg_pindah,']','[brg_pindah_sumber: ',old.brg_pindah_sumber,' => ',new.brg_pindah_sumber,']','[id_fk_refrensi_sumber: ',old.id_fk_refrensi_sumber,' => ',new.id_fk_refrensi_sumber,']','[id_brg_awal: ',old.id_brg_awal,' => ',new.id_brg_awal,']','[id_brg_tujuan: ',old.id_brg_tujuan,' => ',new.id_brg_tujuan,']','[id_fk_cabang: ',old.id_fk_cabang,' => ',new.id_fk_cabang,']','[brg_pindah_qty: ',old.brg_pindah_qty,' => ',new.brg_pindah_qty,']','[brg_pindah_status: ',old.brg_pindah_status,' => ',new.brg_pindah_status,']','[brg_pindah_create_date: ',old.brg_pindah_create_date,' => ',new.brg_pindah_create_date,']','[brg_pindah_last_modified: ',old.brg_pindah_last_modified,' => ',new.brg_pindah_last_modified,']','[id_create_data: ',old.id_create_data,' => ',new.id_create_data,']','[id_last_modified: ',old.id_last_modified,' => ',new.id_last_modified,']');
            call insert_log_all(new.id_last_modified,@log_msg,@log_data,@log_it);
        end

CREATE TRIGGER `trg_after_update_brg_warehouse` AFTER UPDATE ON `tbl_brg_warehouse`
 FOR EACH ROW begin
            insert into tbl_brg_warehouse_log(executed_function,id_pk_brg_warehouse,brg_warehouse_qty,brg_warehouse_notes,brg_warehouse_status,id_fk_brg,id_fk_warehouse,brg_warehouse_create_date,brg_warehouse_last_modified,id_create_data,id_last_modified) values ('after update',new.id_pk_brg_warehouse,new.brg_warehouse_qty,new.brg_warehouse_notes,new.brg_warehouse_status,new.id_fk_brg,new.id_fk_warehouse,new.brg_warehouse_create_date,new.brg_warehouse_last_modified,new.id_create_data,new.id_last_modified);

            select last_insert_id() into @last_id;
            set @log_msg = concat('Data diubah pada tabel tbl_brg_warehouse. Waktu perubahan: ',now());
            set @log_it = concat('Refrensi log table tbl_brg_warehouse_log dengan id_pk_brg_warehouse_log ',@last_id);
            set @log_data = concat('','[id_pk_brg_warehouse: ',old.id_pk_brg_warehouse,' => ',new.id_pk_brg_warehouse,']','[brg_warehouse_qty: ',old.brg_warehouse_qty,' => ',new.brg_warehouse_qty,']','[brg_warehouse_notes: ',old.brg_warehouse_notes,' => ',new.brg_warehouse_notes,']','[brg_warehouse_status: ',old.brg_warehouse_status,' => ',new.brg_warehouse_status,']','[id_fk_brg: ',old.id_fk_brg,' => ',new.id_fk_brg,']','[id_fk_warehouse: ',old.id_fk_warehouse,' => ',new.id_fk_warehouse,']','[brg_warehouse_create_date: ',old.brg_warehouse_create_date,' => ',new.brg_warehouse_create_date,']','[brg_warehouse_last_modified: ',old.brg_warehouse_last_modified,' => ',new.brg_warehouse_last_modified,']','[id_create_data: ',old.id_create_data,' => ',new.id_create_data,']','[id_last_modified: ',old.id_last_modified,' => ',new.id_last_modified,']');
            call insert_log_all(new.id_last_modified,@log_msg,@log_data,@log_it);
        end

CREATE TRIGGER `trg_after_update_cabang_admin` AFTER UPDATE ON `tbl_cabang_admin`
 FOR EACH ROW begin
            insert into tbl_cabang_admin_log(executed_function,id_pk_cabang_admin,id_fk_cabang,id_fk_user,cabang_admin_status,cabang_admin_create_date,cabang_admin_last_modified,id_create_data,id_last_modified) values ('after update',new.id_pk_cabang_admin,new.id_fk_cabang,new.id_fk_user,new.cabang_admin_status,new.cabang_admin_create_date,new.cabang_admin_last_modified,new.id_create_data,new.id_last_modified);

            select last_insert_id() into @last_id;
            set @log_msg = concat('Data diubah pada tabel tbl_cabang_admin. Waktu perubahan: ',now());
            set @log_it = concat('Refrensi log table tbl_cabang_admin_log dengan id_pk_cabang_admin_log ',@last_id);
            set @log_data = concat('','[id_pk_cabang_admin: ',old.id_pk_cabang_admin,' => ',new.id_pk_cabang_admin,']','[id_fk_cabang: ',old.id_fk_cabang,' => ',new.id_fk_cabang,']','[id_fk_user: ',old.id_fk_user,' => ',new.id_fk_user,']','[cabang_admin_status: ',old.cabang_admin_status,' => ',new.cabang_admin_status,']','[cabang_admin_create_date: ',old.cabang_admin_create_date,' => ',new.cabang_admin_create_date,']','[cabang_admin_last_modified: ',old.cabang_admin_last_modified,' => ',new.cabang_admin_last_modified,']','[id_create_data: ',old.id_create_data,' => ',new.id_create_data,']','[id_last_modified: ',old.id_last_modified,' => ',new.id_last_modified,']');
            call insert_log_all(new.id_last_modified,@log_msg,@log_data,@log_it);
        end

CREATE TRIGGER `trg_after_update_hak_akses` AFTER UPDATE ON `tbl_hak_akses`
 FOR EACH ROW begin
            insert into tbl_hak_akses_log(executed_function,id_pk_hak_akses,id_fk_jabatan,id_fk_menu,hak_akses_status,hak_akses_create_date,hak_akses_last_modified,id_create_data,id_last_modified) values ('after update',new.id_pk_hak_akses,new.id_fk_jabatan,new.id_fk_menu,new.hak_akses_status,new.hak_akses_create_date,new.hak_akses_last_modified,new.id_create_data,new.id_last_modified);

        end

CREATE TRIGGER `trg_after_update_penjualan_online` AFTER UPDATE ON `tbl_penjualan_online`
 FOR EACH ROW begin
            insert into tbl_penjualan_online_log(executed_function,id_pk_penjualan_online,penj_on_marketplace,penj_on_no_resi,penj_on_kurir,penj_on_status,id_fk_penjualan,penj_on_create_date,penj_on_last_modified,id_create_data,id_last_modified) values ('after update',new.id_pk_penjualan_online,new.penj_on_marketplace,new.penj_on_no_resi,new.penj_on_kurir,new.penj_on_status,new.id_fk_penjualan,new.penj_on_create_date,new.penj_on_last_modified,new.id_create_data,new.id_last_modified);

        end

CREATE TRIGGER `trg_after_update_penjualan_pembayaran` AFTER UPDATE ON `tbl_penjualan_pembayaran`
 FOR EACH ROW begin
            insert into tbl_penjualan_pembayaran_log(executed_function,id_pk_penjualan_pembayaran,id_fk_penjualan,penjualan_pmbyrn_nama,penjualan_pmbyrn_persen,penjualan_pmbyrn_nominal,penjualan_pmbyrn_notes,penjualan_pmbyrn_dateline,penjualan_pmbyrn_status,penjualan_pmbyrn_create_date,penjualan_pmbyrn_last_modified,id_create_data,id_last_modified) values ('after update',new.id_pk_penjualan_pembayaran,new.id_fk_penjualan,new.penjualan_pmbyrn_nama,new.penjualan_pmbyrn_persen,new.penjualan_pmbyrn_nominal,new.penjualan_pmbyrn_notes,new.penjualan_pmbyrn_dateline,new.penjualan_pmbyrn_status,new.penjualan_pmbyrn_create_date,new.penjualan_pmbyrn_last_modified,new.id_create_data,new.id_last_modified);

        end

CREATE TRIGGER `trg_after_update_retur_brg` AFTER UPDATE ON `tbl_retur_brg`
 FOR EACH ROW begin
            insert into tbl_retur_brg_log(executed_function,id_pk_retur_brg,id_fk_retur,id_fk_brg,retur_brg_qty,retur_brg_satuan,retur_brg_notes,retur_brg_status,retur_create_date,retur_last_modified,id_create_data,id_last_modified) values ('after update',new.id_pk_retur_brg,new.id_fk_retur,new.id_fk_brg,new.retur_brg_qty,new.retur_brg_satuan,new.retur_brg_notes,new.retur_brg_status,new.retur_create_date,new.retur_last_modified,new.id_create_data,new.id_last_modified);

        end

CREATE TRIGGER `trg_after_update_retur_kembali` AFTER UPDATE ON `tbl_retur_kembali`
 FOR EACH ROW begin
            insert into tbl_retur_kembali_log(executed_function,id_pk_retur_kembali,retur_kembali_qty,retur_kembali_satuan,retur_kembali_harga,retur_kembali_note,retur_kembali_status,id_fk_retur,id_fk_brg,retur_kembali_create_date,retur_kembali_last_modified,id_create_data,id_last_modified) values ('after update',new.id_pk_retur_kembali,new.retur_kembali_qty,new.retur_kembali_satuan,new.retur_kembali_harga,new.retur_kembali_note,new.retur_kembali_status,new.id_fk_retur,new.id_fk_brg,new.retur_kembali_create_date,new.retur_kembali_last_modified,new.id_create_data,new.id_last_modified);

        end

CREATE TRIGGER `trg_after_update_tambahan_pembelian` AFTER UPDATE ON `tbl_tambahan_pembelian`
 FOR EACH ROW begin
            insert into tbl_tambahan_pembelian_log(executed_function,id_pk_tmbhn,tmbhn,tmbhn_jumlah,tmbhn_satuan,tmbhn_harga,tmbhn_notes,tmbhn_status,id_fk_pembelian,tmbhn_create_date,tmbhn_last_modified,id_create_data,id_last_modified) values ('after update',new.id_pk_tmbhn,new.tmbhn,new.tmbhn_jumlah,new.tmbhn_satuan,new.tmbhn_harga,new.tmbhn_notes,new.tmbhn_status,new.id_fk_pembelian,new.tmbhn_create_date,new.tmbhn_last_modified,new.id_create_data,new.id_last_modified);

        end

CREATE TRIGGER `trg_after_update_tambahan_penjualan` AFTER UPDATE ON `tbl_tambahan_penjualan`
 FOR EACH ROW begin
            insert into tbl_tambahan_penjualan_log(executed_function,id_pk_tmbhn,tmbhn,tmbhn_jumlah,tmbhn_satuan,tmbhn_harga,tmbhn_notes,tmbhn_status,id_fk_penjualan,tmbhn_create_date,tmbhn_last_modified,id_create_data,id_last_modified) values ('after update',new.id_pk_tmbhn,new.tmbhn,new.tmbhn_jumlah,new.tmbhn_satuan,new.tmbhn_harga,new.tmbhn_notes,new.tmbhn_status,new.id_fk_penjualan,new.tmbhn_create_date,new.tmbhn_last_modified,new.id_create_data,new.id_last_modified);

        end

CREATE TRIGGER `trg_after_update_toko_admin` AFTER UPDATE ON `tbl_toko_admin`
 FOR EACH ROW begin
            insert into tbl_toko_admin_log(executed_function,id_pk_toko_admin,id_fk_toko,id_fk_user,toko_admin_status,toko_admin_create_date,toko_admin_last_modified,id_create_data,id_last_modified) values ('after update',new.id_pk_toko_admin,new.id_fk_toko,new.id_fk_user,new.toko_admin_status,new.toko_admin_create_date,new.toko_admin_last_modified,new.id_create_data,new.id_last_modified);

            select last_insert_id() into @last_id;
            set @log_msg = concat('Data diubah pada tabel tbl_toko_admin. Waktu perubahan: ',now());
            set @log_it = concat('Refrensi log table tbl_toko_admin_log dengan id_pk_toko_admin_log ',@last_id);
            set @log_data = concat('','[id_pk_toko_admin: ',old.id_pk_toko_admin,' => ',new.id_pk_toko_admin,']','[id_fk_toko: ',old.id_fk_toko,' => ',new.id_fk_toko,']','[id_fk_user: ',old.id_fk_user,' => ',new.id_fk_user,']','[toko_admin_status: ',old.toko_admin_status,' => ',new.toko_admin_status,']','[toko_admin_create_date: ',old.toko_admin_create_date,' => ',new.toko_admin_create_date,']','[toko_admin_last_modified: ',old.toko_admin_last_modified,' => ',new.toko_admin_last_modified,']','[id_create_data: ',old.id_create_data,' => ',new.id_create_data,']','[id_last_modified: ',old.id_last_modified,' => ',new.id_last_modified,']');
            call insert_log_all(new.id_last_modified,@log_msg,@log_data,@log_it);
        end

CREATE TRIGGER `trg_after_update_warehouse_admin` AFTER UPDATE ON `tbl_warehouse_admin`
 FOR EACH ROW begin
            insert into tbl_warehouse_admin_log(executed_function,id_pk_warehouse_admin,id_fk_warehouse,id_fk_user,warehouse_admin_status,warehouse_admin_create_date,warehouse_admin_last_modified,id_create_data,id_last_modified) values ('after update',new.id_pk_warehouse_admin,new.id_fk_warehouse,new.id_fk_user,new.warehouse_admin_status,new.warehouse_admin_create_date,new.warehouse_admin_last_modified,new.id_create_data,new.id_last_modified);

            select last_insert_id() into @last_id;
            set @log_msg = concat('Data diubah pada tabel tbl_warehouse_admin. Waktu perubahan: ',now());
            set @log_it = concat('Refrensi log table tbl_warehouse_admin_log dengan id_pk_warehouse_admin_log ',@last_id);
            set @log_data = concat('','[id_pk_warehouse_admin: ',old.id_pk_warehouse_admin,' => ',new.id_pk_warehouse_admin,']','[id_fk_warehouse: ',old.id_fk_warehouse,' => ',new.id_fk_warehouse,']','[id_fk_user: ',old.id_fk_user,' => ',new.id_fk_user,']','[warehouse_admin_status: ',old.warehouse_admin_status,' => ',new.warehouse_admin_status,']','[warehouse_admin_create_date: ',old.warehouse_admin_create_date,' => ',new.warehouse_admin_create_date,']','[warehouse_admin_last_modified: ',old.warehouse_admin_last_modified,' => ',new.warehouse_admin_last_modified,']','[id_create_data: ',old.id_create_data,' => ',new.id_create_data,']','[id_last_modified: ',old.id_last_modified,' => ',new.id_last_modified,']');
            call insert_log_all(new.id_last_modified,@log_msg,@log_data,@log_it);
        end

CREATE TRIGGER `trg_insert_new_menu_to_all_hak_akses` AFTER INSERT ON `mstr_menu`
 FOR EACH ROW begin
	/* insert new menu to all hak akses*/
	set @id_menu = new.id_pk_menu;
	insert into tbl_hak_akses(id_fk_jabatan,id_fk_menu,hak_akses_status,hak_akses_create_date,hak_akses_last_modified,id_create_data,id_last_modified)
	select id_pk_jabatan,@id_menu,'nonaktif',@tgl_action,@tgl_action,@id_user,@id_user from mstr_jabatan;
end

CREATE TRIGGER `trg_update_brg_cabang_after_insert_brg_pengiriman` AFTER INSERT ON `tbl_brg_pengiriman`
 FOR EACH ROW begin
	
            set @id_cabang = 0;
            set @id_barang = 0;
            set @id_warehouse = 0;
            set @brg_pengiriman_qty = new.brg_pengiriman_qty;
            set @id_satuan_kirim = new.id_fk_satuan;
            set @id_fk_brg_penjualan = new.id_fk_brg_penjualan;
            set @id_fk_brg_retur = new.id_fk_brg_retur_kembali;
            set @id_fk_brg_pemenuhan = new.id_fk_brg_pemenuhan;
            
            if @id_fk_brg_penjualan is not null and @id_fk_brg_penjualan != 0
            then
            select mstr_pengiriman.id_fk_cabang, id_fk_barang, id_fk_warehouse into @id_cabang,@id_barang,@id_warehouse 
            from tbl_brg_pengiriman
            inner join tbl_brg_penjualan on tbl_brg_penjualan.id_pk_brg_penjualan = tbl_brg_pengiriman.id_fk_brg_penjualan
            inner join mstr_penjualan on mstr_penjualan.id_pk_penjualan = tbl_brg_penjualan.id_fk_penjualan
            inner join mstr_pengiriman on mstr_pengiriman.id_pk_pengiriman = tbl_brg_pengiriman.id_fk_pengiriman
            where id_pk_brg_pengiriman = new.id_pk_brg_pengiriman;
            
            elseif @id_fk_brg_retur is not null and @id_fk_brg_retur != 0
            then
            select mstr_pengiriman.id_fk_cabang, id_fk_brg, id_fk_warehouse into @id_cabang,@id_barang,@id_warehouse
            from tbl_brg_pengiriman
            inner join tbl_retur_kembali on tbl_retur_kembali.id_pk_retur_kembali = tbl_brg_pengiriman.id_fk_brg_retur_kembali
            inner join mstr_pengiriman on mstr_pengiriman.id_pk_pengiriman = tbl_brg_pengiriman.id_fk_pengiriman
            where id_pk_brg_pengiriman = new.id_pk_brg_pengiriman;

            elseif @id_fk_brg_pemenuhan is not null and @id_fk_brg_pemenuhan != 0 
            then
            
            select mstr_pengiriman.id_fk_cabang, id_fk_brg, mstr_pengiriman.id_fk_warehouse into @id_cabang,@id_barang,@id_warehouse
            from tbl_brg_pengiriman
            inner join tbl_brg_pemenuhan on tbl_brg_pemenuhan.id_pk_brg_pemenuhan = tbl_brg_pengiriman.id_fk_brg_pemenuhan
            inner join tbl_brg_permintaan on tbl_brg_permintaan.id_pk_brg_permintaan = tbl_brg_pemenuhan.id_fk_brg_permintaan
            inner join mstr_pengiriman on mstr_pengiriman.id_pk_pengiriman = tbl_brg_pengiriman.id_fk_pengiriman
            where id_pk_brg_pengiriman = new.id_pk_brg_pengiriman;
            end if;
            if @id_warehouse is not null then
            call update_stok_barang_warehouse(@id_barang,@id_warehouse,0,0,@brg_pengiriman_qty,@id_satuan_kirim);
            elseif @id_cabang is not null then 
            call update_stok_barang_cabang(@id_barang,@id_cabang,0,0,@brg_pengiriman_qty,@id_satuan_kirim);
            end if;
end

CREATE TRIGGER `trg_update_brg_cabang_after_insert_brg_pindah` AFTER INSERT ON `tbl_brg_pindah`
 FOR EACH ROW begin
	/*update barang cabang*/
	select id_pk_satuan into @id_satuan from mstr_satuan where mstr_satuan.satuan_rumus = 1;            
	call update_stok_barang_cabang(new.id_brg_awal,new.id_fk_cabang,0,0,new.brg_pindah_qty,@id_satuan);
	call update_stok_barang_cabang(new.id_brg_tujuan,new.id_fk_cabang,new.brg_pindah_qty,@id_satuan,0,0);
end

CREATE TRIGGER `trg_update_brg_cabang_after_update_brg_penerimaan` AFTER UPDATE ON `tbl_brg_penerimaan`
 FOR EACH ROW begin
	set @id_cabang = 0;
	set @id_barang = 0;
	set @id_warehouse = 0;
	set @brg_penerimaan_qty = new.brg_penerimaan_qty;
	set @id_satuan_terima = new.id_fk_satuan;
	set @brg_keluar_qty = old.brg_penerimaan_qty;
	set @id_satuan_keluar = old.id_fk_satuan;
	set @id_fk_brg_pembelian = new.id_fk_brg_pembelian;
	set @id_fk_brg_retur = new.id_fk_brg_retur;
	set @id_fk_brg_pengiriman = new.id_fk_brg_pengiriman;
	
	if @id_fk_brg_pembelian is not null and @id_fk_brg_pembelian != 0
	then
	select mstr_penerimaan.id_fk_cabang, id_fk_barang, mstr_penerimaan.id_fk_warehouse into @id_cabang,@id_barang,@id_warehouse 
	from tbl_brg_penerimaan
	inner join tbl_brg_pembelian on tbl_brg_pembelian.id_pk_brg_pembelian = tbl_brg_penerimaan.id_fk_brg_pembelian
	inner join mstr_penerimaan on mstr_penerimaan.id_pk_penerimaan = tbl_brg_penerimaan.id_fk_penerimaan
	where id_pk_brg_penerimaan = new.id_pk_brg_penerimaan;

	elseif @id_fk_brg_retur is not null and @id_fk_brg_retur != 0 then
	select mstr_penerimaan.id_fk_cabang, id_fk_brg, mstr_penerimaan.id_fk_warehouse into @id_cabang,@id_barang,@id_warehouse
	from tbl_brg_penerimaan
	inner join tbl_retur_brg on tbl_retur_brg.id_pk_retur_brg = tbl_brg_penerimaan.id_fk_brg_retur
	inner join mstr_penerimaan on mstr_penerimaan.id_pk_penerimaan = tbl_brg_penerimaan.id_fk_penerimaan
	where id_pk_brg_penerimaan = new.id_pk_brg_penerimaan;

	elseif @id_fk_brg_pengiriman is not null and @id_fk_brg_pengiriman != 0 then
	select mstr_penerimaan.id_fk_cabang, id_fk_brg, mstr_penerimaan.id_fk_warehouse into @id_cabang,@id_barang,@id_warehouse
	from tbl_brg_penerimaan
	inner join tbl_brg_pengiriman on tbl_brg_pengiriman.id_pk_brg_pengiriman = tbl_brg_penerimaan.id_fk_brg_pengiriman
	inner join tbl_brg_pemenuhan on tbl_brg_pemenuhan.id_pk_brg_pemenuhan = tbl_brg_pengiriman.id_fk_brg_pemenuhan
	inner join tbl_brg_permintaan on tbl_brg_permintaan.id_pk_brg_permintaan = tbl_brg_pemenuhan.id_fk_brg_permintaan
	inner join mstr_penerimaan on mstr_penerimaan.id_pk_penerimaan = tbl_brg_penerimaan.id_fk_penerimaan
	where id_pk_brg_penerimaan = new.id_pk_brg_penerimaan;
	end if;
	
	if @id_warehouse is not null then
	call update_stok_barang_warehouse(@id_barang,@id_warehouse,@brg_penerimaan_qty,@id_satuan_terima,@brg_keluar_qty,@id_satuan_keluar);
	elseif @id_cabang is not null then 
	call update_stok_barang_cabang(@id_barang,@id_cabang,@brg_penerimaan_qty,@id_satuan_terima,@brg_keluar_qty,@id_satuan_keluar);
	end if;

end

CREATE TRIGGER `trg_update_brg_cabang_after_update_brg_pengiriman` AFTER UPDATE ON `tbl_brg_pengiriman`
 FOR EACH ROW begin
	
            
            set @id_cabang = 0;
            set @id_barang = 0;
            set @id_warehouse = 0;
            set @brg_pengiriman_qty = new.brg_pengiriman_qty;
            set @id_satuan_terima = new.id_fk_satuan;
            set @brg_keluar_qty = old.brg_pengiriman_qty;
            set @id_satuan_keluar = old.id_fk_satuan;
            set @id_fk_brg_penjualan = new.id_fk_brg_penjualan;
            set @id_fk_brg_retur = new.id_fk_brg_retur_kembali;
            set @id_fk_brg_pemenuhan = new.id_fk_brg_pemenuhan;

            if @id_fk_brg_penjualan is not null and @id_fk_brg_penjualan != 0
            then
            select mstr_pengiriman.id_fk_cabang, id_fk_barang, id_fk_warehouse into @id_cabang,@id_barang,@id_warehouse 
            from tbl_brg_pengiriman
            inner join tbl_brg_penjualan on tbl_brg_penjualan.id_pk_brg_penjualan = tbl_brg_pengiriman.id_fk_brg_penjualan
            inner join mstr_penjualan on mstr_penjualan.id_pk_penjualan = tbl_brg_penjualan.id_fk_penjualan inner join mstr_pengiriman on mstr_pengiriman.id_pk_pengiriman = tbl_brg_pengiriman.id_fk_pengiriman
            where id_pk_brg_pengiriman = new.id_pk_brg_pengiriman;
            
            elseif @id_fk_brg_retur is not null and @id_fk_brg_retur != 0 then
            select mstr_pengiriman.id_fk_cabang, id_fk_brg, id_fk_warehouse into @id_cabang,@id_barang,@id_warehouse
            from tbl_brg_pengiriman
            inner join tbl_retur_kembali on tbl_retur_kembali.id_pk_retur_kembali = tbl_brg_pengiriman.id_fk_brg_retur_kembali
            inner join mstr_pengiriman on mstr_pengiriman.id_pk_pengiriman = tbl_brg_pengiriman.id_fk_pengiriman
            where id_pk_brg_pengiriman = new.id_pk_brg_pengiriman;

            elseif @id_fk_brg_pemenuhan is not null and @id_fk_brg_pemenuhan != 0
            then
            select mstr_pengiriman.id_fk_cabang, id_fk_brg, mstr_pengiriman.id_fk_warehouse into @id_cabang,@id_barang,@id_warehouse
            from tbl_brg_pengiriman
            inner join tbl_brg_pemenuhan on tbl_brg_pemenuhan.id_pk_brg_pemenuhan = tbl_brg_pengiriman.id_fk_brg_pemenuhan
            inner join tbl_brg_permintaan on tbl_brg_permintaan.id_pk_brg_permintaan = tbl_brg_pemenuhan.id_fk_brg_permintaan
            inner join mstr_pengiriman on mstr_pengiriman.id_pk_pengiriman = tbl_brg_pengiriman.id_fk_pengiriman
            where id_pk_brg_pengiriman = new.id_pk_brg_pengiriman;
            end if;
            
            if @id_warehouse is not null then
            call update_stok_barang_warehouse(@id_barang,@id_warehouse,@brg_keluar_qty,@id_satuan_keluar,@brg_pengiriman_qty,@id_satuan_terima);
            elseif @id_cabang is not null then 
            call update_stok_barang_cabang(@id_barang,@id_cabang,@brg_keluar_qty,@id_satuan_keluar,@brg_pengiriman_qty,@id_satuan_terima);
            end if;
end
